// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type HasID interface {
	IsHasID()
	GetID() *string
}

// 机器
type Machine struct {
	ID *string `json:"id,omitempty" bson:"_id"`
	// 名称
	Name *string `json:"name,omitempty"`
}

func (Machine) IsHasID()            {}
func (this Machine) GetID() *string { return this.ID }

type MachineInput struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

type MachineMutation struct {
	SaveMachine   *Machine `json:"saveMachine,omitempty"`
	DeleteMachine int      `json:"deleteMachine"`
}

// 项目
type Project struct {
	ID *string `json:"id,omitempty" bson:"_id"`
	// 项目编码
	Code *string `json:"code,omitempty"`
	// 项目名称
	Name *string `json:"name,omitempty"`
	// 当前机器
	Machine *Machine `json:"machine,omitempty" bson:"-"`
	// 可用机器
	Machines []*Machine `json:"machines,omitempty" bson:"-"`
	// 当前机器ID
	MachineID *string `json:"machineID,omitempty" bson:"machine"`
	// 可用机器ID
	MachineIDs []*string `json:"machineIDs,omitempty" bson:"machines"`
	Routes     []*Route  `json:"routes,omitempty" bson:"-"`
}

func (Project) IsHasID()            {}
func (this Project) GetID() *string { return this.ID }

type ProjectInput struct {
	ID         *string   `json:"id,omitempty"`
	Code       *string   `json:"code,omitempty"`
	Name       *string   `json:"name,omitempty"`
	MachineID  *string   `json:"machineID,omitempty"`
	MachineIDs []*string `json:"machineIDs,omitempty"`
}

type ProjectMutation struct {
	SaveProject      *Project      `json:"saveProject,omitempty"`
	DeleteProject    int           `json:"deleteProject"`
	SyncProjectRoute []*SyncResult `json:"syncProjectRoute,omitempty"`
}

// 路由
type Route struct {
	ID *string `json:"id,omitempty" bson:"_id"`
	// 地址
	Name *string `json:"name,omitempty"`
	// 描述
	Description *string `json:"description,omitempty"`
	// 项目
	Project   *Project `json:"project,omitempty" bson:"-"`
	ProjectID *string  `json:"projectID,omitempty" bson:"project"`
}

func (Route) IsHasID()            {}
func (this Route) GetID() *string { return this.ID }

type RouteInput struct {
	ID          *string `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	ProjectID   *string `json:"projectID,omitempty"`
}

type RouteMutation struct {
	SaveRoute   *Route `json:"saveRoute,omitempty"`
	DeleteRoute int    `json:"deleteRoute"`
}

// 项目路由同步结果
type SyncResult struct {
	ProjectID string   `json:"projectID"`
	Project   *Project `json:"project,omitempty"`
	RouteID   string   `json:"routeID"`
	Route     *Route   `json:"route,omitempty"`
	MachineID string   `json:"machineID"`
	Machine   *Machine `json:"machine,omitempty"`
	// 路由是否启用
	RouteEnable bool `json:"routeEnable"`
}
